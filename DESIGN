class: Point
methods:
   distance_sq()
   adjacent()

class: Background
methods:
   __init__()
   get_images()
   get_image()
   get_name()
   next_image()
   entity_string()

class: MinerNotFull
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_rate()
   set_resource_count()
   get_resource_count()
   get_resource_limit()
   get_name()
   get_animation_rate()
   remove_pending_action()
   add_pending_action()
   get_pending_action()
   clear_pending_actions()
   next_image()
   entity_string()
   miner_to_ore()
   create_miner_action()
   try_transform_miner()
   schedule_miner()


class: MinerFull
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_rate()
   set_resource_count()
   get_resource_count()
   get_resource_limit()
   get_name()
   get_animation_rate()
   remove_pending_action()
   add_pending_action()
   get_pending_action()
   clear_pending_actions()
   next_image()
   entity_string()
   miner_to_smith()
   create_miner_action()
   try_transform_miner()

class: Vein
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_rate()
   get_resource_distance()
   get_name()
   remove_pending_action()
   add_pending_action()
   get_pending_actions()
   clear_pending_actions()
   next_image()
   entity_string()
   create_vein_action()
   schedule_vein()
   
class: Ore
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_rate()
   get_name()
   remove_pending_action()
   add_pending_action()
   get_pending_actions()
   clear_pending_actions()
   next_image()
   entity_string()
   
class: Blacksmith
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_rate()
   set_resource_count()
   get_resource_count()
   get_resource_limit()
   get_resource_distance()
   get_name()
   remove_pending_action()
   add_pending_action()
   get_pending_actions()
   clear_pending_actions()
   next_image()
   entity_string()
   
class: Obstacle
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_name()
   next_image()
   entity_string()
   
class: OreBlob
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_rate()
   get_name()
   get_animation_rate()
   remove_pending_action()
   add_pending_action()
   get_pending_actions()
   clear_pending_actions()
   next_image()
   entity_string()
   blob_to_vein()
   create_ore_blob_action()
   schedule_blob()
   
class: Quake
methods:
   __init__()
   set_position()
   get_position()
   get_images()
   get_image()
   get_name()
   get_animation_rate()
   remove_pending_action()
   add_pending_action()
   get_pending_actions()
   clear_pending_actions()
   next_image()
   entity_string()

class: WorldModel
methods:
   __init__()
   within_bounds()
   is_occupied()
   find_nearest()
   add_entity()
   move_entity()
   remove_entity()
   remove_entity_at()
   schedule_action()
   unschedule_action()
   update_on_time()
   get_background_time()
   get_background()
   set_background()
   get_tile_occupant()
   get_entities()
   next_position()
   blob_next_position()
   find_open_around()

class: WorldView
methods:
   __init__()
   draw_background()
   draw_entities()
   draw_viewport()
   update_view()
   update_view_tiles()
   update_tile()
   get_tile_image()
   create_mouse_surface()
   update_mouse_cursor()
   mouse_move()

class: Grid
methods:
   __init__()
   set_cell()
   get_cell()

class: OrderedList
methods:
   __init__()
   insert()
   remove()
   head()
   pop()

class: ListItem
methods:
   __init__()
   __eq__()



***********************************
Functions Not Turned into Methods:
***********************************

actions.py:
   create_animation_action() - left a function because it doesn't belong to a specific entity type
   try_transform_miner() - left a function because it doesn't belong to a specific entity type
   remove_entity() - left a function because it doesn't belong to a specific entity type
   create_blob() - left a function because doesn't belong in the Blob class and simply creates and returns a blob
   create_ore() -  left a function because doesn't belong in the Ore class and simply creates and returns an ore
   create_quake() - left a function because doesn't belong in the Quake class and simply creates and returns a quake
   create_vein() - left a function because doesn't belong in the Vein class and simply creates and returns a vein
   schedule_action() - left a function because it doesn't belong to a specific entity type
   schedule_animation() - left a function because it doesn't belong to a specific entity type
   clear_pending_actions() - left a function because it doesn't belong to a specific entity type

builder_controller.py:
   mouse_to_tile() - 
   save_world() -
   load_world() -
   on_keydown() -
   handle_mouse_motion() -
   handle_keydown() -
   create_new_entity() -
   is_background_tile() -
   handle_mouse_button() -
   activity_loop() -

builder.py:
   create_default_background() - left as a function because it just returns an image, doesn't depend on an object
   main() - left as a function because the main function doesn't depend on a specific object and 
            doesn't take in any parameters

controller.py:
   on_keydown() - 
   mouse_to_tile() -
   handle_timer_event() -
   handle_mouse_motion() -
   handle_keydown() -
   activity_loop() -

entities.py:
   *Consists soley of methods*

image_store.py:
   create_default_image() -
   load_images() -
   process_image_line() -
   get_images_internal() -
   get_images() -
   
keys.py:
   *Consists of enums*

main.py:
   create_default_background() - left as a function because it just returns an image, doesn't depend on an object
   load_world() - left as a function because it has one use, to open a file and call another function
   main() - left as a function because the main function doesn't depend on a specific object and 
            doesn't take in any parameters

mouse_buttons.py:
   *Consists of enums*

occ_grid.py:
   *Consists soley of methods*

ordered_list.py:
   *No functions left*

point.py:
   sign(x) - left as a function because it only performs logic and doesn't relate to any entity
             or abstract object

save_load.py:
   save_world() -
   save_entities() -
   save_background() -
   load_world() -
   add_background() -
   add_entity() -
   create_from_properties() -
   create_miner() -
   create_vein() -
   create_ore() -
   create_blacksmith() -
   create_obstacle() -
   schedule_entity() -

worldmodel.py
   nearest_entity() - left as a function because it doesn't refer to a commonly used data type and it performs logic that is used to assist other functions

worldview.py:
   viewport_to_world() - 
   world_to_viewport() -
   clamp() -
   create_shifted_viewport() -    



